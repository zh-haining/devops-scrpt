pipeline {
   agent any
   environment {
       a_git_url = "https://github.com/zh-haining/jenkins-demo.git"
       b_git_url = "https://github.com/zh-haining/jenkins-demo.git"
       c_git_url = "https://github.com/zh-haining/jenkins-demo.git"
   }
   parameters {
       choice(choices: ['dev','test-9091', 'test9092', 'pre-9080','prod'], description: '选择环境', name: 'envType')
       choice(choices: ['串行','并行'], description: '串行发布还是并行发布', name: 'pubType')
       string defaultValue: 'master', description: '项目A的分支', name: 'a_branch', trim: true
       string defaultValue: 'master', description: '项目B的分支', name: 'b_branch', trim: true
       string defaultValue: 'master', description: '项目C的分支', name: 'c_branch', trim: true
   }
   stages {
      stage('初始化') {
        steps{
          echo " envType: ${envType} | pubType: ${pubType} | a_branch: ${a_branch}| b_branch: ${b_branch}| c_branch: ${c_branch}"
          echo "a_git_url:${env.a_git_url} | b_git_url: ${env.b_git_url} | c_git_url: ${env.c_git_url}"
        }
      }
      stage('拉取代码') {
            parallel {
                stage('拉取项目A的代码') {
                    steps {
                        echo "正在拉取项目A的代码"
                        sleep 5
                        echo "项目A代码拉取完毕"
                    }
                }
                stage('拉取项目B的代码') {
                    steps {
                        echo "正在拉取项目B的代码"
                        sleep 8
                        echo "项目B代码拉取完毕"
                    }
                }
                stage('拉取项目C的代码') {
                    steps {
                        echo "正在拉取项目B的代码"
                        sleep 3
                        echo "项目C代码拉取完毕"
                    }
                }
            }

      }
      stage('编译构建') {
          steps{
                echo "编译构建开始..."
                sleep 5
                echo "编译构建完毕!"
          }
      }
      stage('发布第一台服务器') {
            steps{
                  echo "发布192.168.100开始..."
                  sleep 5
                  echo "发布192.168.100完毕!"
            }
       }
       stage('信息确认') {
           steps{
             input message: '确认没有问题要继续发布后续服务器吗？', ok: '继续'
           }
       }
       stage('集群串行发布') {
           when {
             equals expected: '串行',
             actual: "${pubType}"
           }
           steps{
               echo "pub 192.168.1.100"
               sleep 5

               echo "pub 192.168.1.101"
               sleep 2

               echo "pub 192.168.1.102"
               sleep 3
           }
     }

     stage('集群并行发布') {
           when {
             equals expected: '并行',
             actual: "${pubType}"
           }
           parallel {
               stage('pub 192.168.1.100') {
                   steps {
                       echo "pub 192.168.1.100"
                       sleep 3
                   }
               }
               stage('pub 192.168.1.101') {
                   steps {
                       echo "pub 192.168.1.101"
                       sleep 5
                   }
               }
               stage('pub 192.168.1.102') {
                   steps {
                       echo "pub 192.168.1.102"
                       sleep 2
                   }
               }
           }
     }
      stage('通知') {
           steps {
               echo "通知完成"
          }
       }
   }
}
